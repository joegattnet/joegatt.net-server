services:
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    command:
      - "--log.level=WARN"
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.myresolver.acme.email=${ADMIN_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--pilot.token=${TRAEFIK_PILOT_KEY}"
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.joegatt.net`, `traefik.joegatt.org`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
    networks:
      - frontend
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  v3joegattnet:
    container_name: v3.joegatt.net
    build:
      context: ./joegatt.net-v3-html
    volumes:
      - ./joegatt.net-v3-html:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.v3joegattnet.rule=Host(`v3.joegatt.net`, `joegatt.net`, `www.joegatt.net`)"
      - "traefik.http.routers.v3joegattnet.entrypoints=websecure"
      - "traefik.http.routers.v3joegattnet.tls.certresolver=myresolver"
    networks:
      - frontend

  # APHROCONFUSO ************************************************************
  # *************************************************************************

  v0aphroconfuso:
    container_name: v0.aphroconfuso
    build:
      context: ./aphroconfuso-v0
    volumes:
      - ./aphroconfuso-v0:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.v0aphroconfuso.rule=Host(`aphroconfuso.mt`)"
      - "traefik.http.routers.v0aphroconfuso.entrypoints=websecure"
      - "traefik.http.routers.v0aphroconfuso.tls.certresolver=myresolver"
      - "traefik.http.routers.v0aphroconfuso.middlewares=cors"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://newsletter.aphroconfuso.mt,https://aphroconfuso.mt"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"

    networks:
      - frontend

  listmonk:
    container_name: listmonk
    restart: unless-stopped
    image: listmonk/listmonk:latest
    ports:
      - "9000:9000"
    environment:
      - TZ=Etc/GMT+1
    networks:
      - frontend
      - listmonk
    depends_on:
      - postgreslistmonk
    command:
      [
        sh,
        -c,
        "yes | ./listmonk --install --idempotent --config /listmonk/config.toml && ./listmonk --config /listmonk/config.toml --static-dir=/listmonk/static --i18n-dir=/listmonk/i18n",
      ]
    volumes:
      - ./aphroconfuso.mt-v1/listmonk/config.toml:/listmonk/config.toml
      - ./aphroconfuso.mt-v1/listmonk/i18n:/listmonk/i18n
      - ./aphroconfuso.mt-v1/listmonk/static:/listmonk/static
      - ./aphroconfuso.mt-v1/listmonk/uploads:/listmonk/uploads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.listmonk.rule=Host(`newsletter.aphroconfuso.mt`)"
      - "traefik.http.routers.listmonk.entrypoints=websecure"
      - "traefik.http.routers.listmonk.tls.certresolver=myresolver"

  postgreslistmonk:
    container_name: postgreslistmonk
    image: postgres:11
    ports:
      - "9433:5432"
    command: -p 9433
    networks:
      - listmonk
    environment:
      - POSTGRES_DB=${LISTMONK_DB}
      - POSTGRES_PASSWORD=${LISTMONK_PASSWORD}
      - POSTGRES_USER=${LISTMONK_USER}
    restart: unless-stopped
    volumes:
      - aphroconfuso.mt-v1-data/listmonk:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U listmonk"]
      interval: 10s
      timeout: 5s
      retries: 6

  matomo:
    container_name: matomo
    image: matomo
    restart: always
    volumes:
      - ./aphroconfuso.mt-v1/matomo/config:/var/www/html/config
      - ./aphroconfuso.mt-v1/matomo/logs:/var/www/html/logs
    environment:
      - MATOMO_DATABASE_HOST=mariadbmatomo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.matomo.rule=Host(`analitika.aphroconfuso.mt`)"
      - "traefik.http.routers.matomo.entrypoints=websecure"
      - "traefik.http.routers.matomo.tls.certresolver=myresolver"
    networks:
      - matomo
      - frontend

  mariadbmatomo:
    container_name: mariadbmatomo
    image: mariadb
    command: --max-allowed-packet=64MB
    restart: always
    volumes:
      - aphroconfuso.mt-v1-data/matomo:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      - matomo
      - backend

  strapi:
    container_name: strapi
    build: ./aphroconfuso.mt-v1/strapi/
    image: mystrapi:latest
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: ${STRAPI_CLIENT}
      DATABASE_HOST: postgresstrapi
      DATABASE_NAME: ${STRAPI_NAME}
      DATABASE_USERNAME: ${STRAPI_USERNAME}
      DATABASE_PORT: ${STRAPI_PORT}
      JWT_SECRET: ${STRAPI_JWT_SECRET}
      ADMIN_JWT_SECRET: ${STRAPI_ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${STRAPI_PASSWORD}
      NODE_ENV: production
    volumes:
      - ./aphroconfuso.mt-v1/strapi/config:/opt/app/config
      - ./aphroconfuso.mt-v1/strapi/src:/opt/app/src
      - ./aphroconfuso.mt-v1/strapi/package.json:/opt/package.json
      - ./aphroconfuso.mt-v1/strapi/package-lock.json:/opt/package-lock.json
      - ./aphroconfuso.mt-v1/strapi/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi
      - frontend
    depends_on:
      - postgresstrapi
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cms.rule=Host(`cms.aphroconfuso.mt`)"
      - "traefik.http.routers.cms.entrypoints=websecure"
      - "traefik.http.routers.cms.tls.certresolver=myresolver"

  postgresstrapi:
    container_name: postgresstrapi
    restart: unless-stopped
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${STRAPI_USERNAME}
      POSTGRES_PASSWORD: ${STRAPI_PASSWORD}
      POSTGRES_DB: ${STRAPI_NAME}
    volumes:
      - aphroconfuso.mt-v1-data/strapi:/var/lib/postgresql/data
    ports:
      - "5437:5437"
    networks:
      - strapi

volumes:
  dbdata:
  aphroconfuso.mt-v1-data/listmonk:
  aphroconfuso.mt-v1-data/matomo:
  aphroconfuso.mt-v1-data/strapi:

networks:
  frontend:
    external: true
  backend:
    external: false
  listmonk:
    external: true
  matomo:
    external: true
  strapi:
    external: true
